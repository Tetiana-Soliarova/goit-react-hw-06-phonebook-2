{"version":3,"sources":["component/ContactForm/form.module.css","component/Filter/styles.module.css","component/Alert/styleAlert.module.css","component/Header/logo.module.css","component/ContactForm/Fade.module.css","FilterFade.module.css","component/ContactList/pop.module.css","component/Header/fade.module.css","redux/contacts/contacts-actions.js","component/Alert/alert.jsx","component/Filter/Filter.js","component/ContactForm/Form.js","component/ContactList/ContactItem.jsx","component/ContactList/ContactList.jsx","component/Header/phonebook.jpg","component/Header/Header.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","component/ContactList/contactStyles.module.css"],"names":["module","exports","addContact","createAction","data","payload","id","uuidv4","name","number","deleteTodo","changeFilter","Alert","className","styleAlert","alert","error","connect","state","value","contacts","filter","dispatch","onChange","e","contactsActions","currentTarget","styles","filtr","label","input","type","ContactForm","hendleNameChange","event","setState","hendleSubmit","preventDefault","props","find","items","target","elements","setTimeout","onSubmit","reset","container","CSSTransition","in","this","timeout","classNames","fade","unmountOnExit","buttomForm","length","filterFade","onExiting","clearFilter","Component","ContactItem","onDeleteContact","item","buttonContact","onClick","getVisibleTodos","allContact","normalizedFilter","toLowerCase","contact","includes","deleteContact","style","title","TransitionGroup","component","contactList","map","popTransition","Header","header","appear","src","foto","alt","width","App","createReducer","actions","_","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactReducer","persistor","persistStore","console","log","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.430abd5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"form_input__2a5-s\",\"label\":\"form_label__rBoQH\",\"buttomForm\":\"form_buttomForm__2TEJ6\",\"container\":\"form_container__3x9y5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"styles_label__1W8Dv\",\"filtr\":\"styles_filtr__3DUxL\",\"input\":\"styles_input__3ZMLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"styleAlert_alert__3DSFm\",\"error\":\"styleAlert_error__1cWJ1\",\"fade-enter\":\"styleAlert_fade-enter__3LEGz\",\"fade-enter-active\":\"styleAlert_fade-enter-active__eHJ5S\",\"fade-exit\":\"styleAlert_fade-exit__1YpzY\",\"fade-exit-active\":\"styleAlert_fade-exit-active__1hu2L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"logo_title__3z0Mo\",\"header\":\"logo_header__19yxb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Fade_enter__1GHd-\",\"enterActive\":\"Fade_enterActive__3jqOv\",\"exit\":\"Fade_exit__1l7p5\",\"exitActive\":\"Fade_exitActive__Q7p30\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"FilterFade_enter__3JW7d\",\"enterActive\":\"FilterFade_enterActive__8lymu\",\"exit\":\"FilterFade_exit__4nQt2\",\"exitActive\":\"FilterFade_exitActive__2djUQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__axhEZ\",\"enterActive\":\"pop_enterActive__1_PIq\",\"exit\":\"pop_exit__XeLAa\",\"exitActive\":\"pop_exitActive__d7th1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"fade_appear__16YB6\",\"appearActive\":\"fade_appearActive__3RL4m\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n/*import types from './contacts-types';*/\r\n\r\n\r\n\r\n\r\nconst addContact = createAction('contact/Add', data => {\r\n    return {payload: {\r\n        id: uuidv4(),\r\n        name: data.name,\r\n        number: data.number,}\r\n    }\r\n})\r\n/*const addContact = (data) => ({\r\n    type: types.ADD,\r\n    payload: {\r\n        id: uuidv4(),\r\n        name: data.name,\r\n        number: data.number,\r\n    },\r\n});*/\r\n\r\nconst deleteTodo=createAction('contact/Delete')\r\n/*const deleteTodo = removeId => ({\r\n    type: types.DELETE,\r\n    payload: removeId\r\n});*/\r\n\r\n\r\nconst changeFilter= createAction('contact/changeFilter')\r\n/*const changeFilter = value => ({\r\n    type: types.CHANGE_FILTER,\r\n    payload: value \r\n})*/\r\n\r\nexport default { addContact, deleteTodo, changeFilter};","import React from \"react\";\r\nimport styleAlert from \"./styleAlert.module.css\";\r\n\r\nfunction Alert() {\r\n  return (\r\n    <div className={styleAlert.alert}>\r\n      <h1 className={styleAlert.error}> Contacts already exists! </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './styles.module.css'\r\nimport contactsActions from '../../redux/contacts/contacts-actions'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div className={styles.filtr}>\r\n      <label className={styles.label}>Find contacts by name</label>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) =>\r\n    dispatch(contactsActions.changeFilter(e.currentTarget.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { Component } from 'react';\r\nimport styles from './form.module.css';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Alert from '../Alert/alert';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport fade from './Fade.module.css';\r\nimport Filter from '../Filter/Filter';\r\nimport filterFade from '../../FilterFade.module.css'\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    error: false,\r\n    \r\n  }\r\n\r\n  //метод который обновляет состояние\r\n  hendleNameChange = (event) => {\r\n    const { name, value } = event.currentTarget\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  //метод который Submit form\r\n  hendleSubmit = (event) => {\r\n    event.preventDefault()\r\n    if (\r\n      this.props.contacts.find(\r\n        (items) => items.name === event.target.elements[0].value,\r\n      )\r\n    ) {\r\n      this.setState({\r\n        error: true,\r\n      })\r\n\r\n      return setTimeout(() => {\r\n        this.setState({\r\n          error: false,\r\n        })\r\n      }, 2500)\r\n    }\r\n    this.props.onSubmit(this.state)\r\n\r\n    this.reset()\r\n  }\r\n\r\n  //очистка форми\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={styles.container}>\r\n          <CSSTransition\r\n            in={this.state.error}\r\n            timeout={250}\r\n            classNames={fade}\r\n            unmountOnExit\r\n          >\r\n            <Alert />\r\n          </CSSTransition>\r\n\r\n          <form onSubmit={this.hendleSubmit}>\r\n            <label className={styles.label}>\r\n              Name\r\n              <input\r\n                className={styles.input}\r\n                name=\"name\"\r\n                type=\"text\"\r\n                value={this.state.name}\r\n                onChange={this.hendleNameChange}\r\n              />\r\n            </label>\r\n\r\n            <label className={styles.label}>\r\n              Number\r\n              <input\r\n                className={styles.input}\r\n                name=\"number\"\r\n                type=\"tel\"\r\n                value={this.state.number}\r\n                onChange={this.hendleNameChange}\r\n              />\r\n            </label>\r\n            <button className={styles.buttomForm} type=\"submit\">\r\n              Add contact\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <CSSTransition\r\n          in={this.props.contacts.length > 1}\r\n          timeout={250}\r\n          classNames={filterFade}\r\n          unmountOnExit\r\n          onExiting={() => this.props.clearFilter()}\r\n        >\r\n          <Filter />\r\n        </CSSTransition>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsActions.addContact(name, number)),\r\n  clearFilter: () => dispatch(contactsActions.changeFilter(\"\")),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./contactStyles.module.css\";\r\n\r\nconst ContactItem = ({ name, number, id, onDeleteContact }) => {\r\n  return (\r\n    <li className={styles.item} key={id}>\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.number}>{number}</p>\r\n\r\n      <button\r\n        className={styles.buttonContact}\r\n        type=\"button\"\r\n        onClick={onDeleteContact}\r\n      ></button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport popTransition from \"./pop.module.css\";\r\nimport style from \"./contactStyles.module.css\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\n\r\n\r\nconst ContactList = ({ contacts, deleteContact, clearFilter }) => {\r\n  return (\r\n    <div>\r\n      <h2 className={style.title}>Contacts</h2>\r\n      <TransitionGroup component=\"ul\" className={style.contactList}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <CSSTransition key={id} timeout={250} classNames={popTransition}>\r\n            <ContactItem\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              number={number}\r\n              onDeleteContact={() => deleteContact(id)}\r\n            />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibleTodos = (allContact, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContact.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => {\r\n  return {\r\n    contacts: getVisibleTodos(items, filter),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteContact: (id) => dispatch(contactsActions.deleteTodo(id)),\r\n  \r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","export default __webpack_public_path__ + \"static/media/phonebook.e4355707.jpg\";","import React from \"react\";\r\nimport style from \"./logo.module.css\";\r\nimport fade from \"./fade.module.css\";\r\nimport foto from \"./phonebook.jpg\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className={style.header}>\r\n      <CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        timeout={500}\r\n        classNames={fade}\r\n        unmountOnExit\r\n      >\r\n        <h1 className={style.title}>\r\n          <img src={foto} alt=\"\" width=\"150px\" />\r\n          Phonebook\r\n        </h1>\r\n      </CSSTransition>\r\n    </header>\r\n  );\r\n}\r\nexport default Header;\r\n","import { Component } from 'react';\nimport ContactForm from './component/ContactForm/Form';\nimport ContactList from './component/ContactList/ContactList';\nimport Header from './component/Header/Header'\n\nclass App extends Component {\n \n  render() {\n  \n    return (\n      <div >\n        <Header />\n\n        <div>\n          <ContactForm/>\n          <ContactList/> \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux'\r\n//import types from './contacts-types'\r\nimport actions from './contacts-actions'\r\n\r\nconst items = createReducer([], {\r\n [actions.addContact]: (state, { payload }) => [...state, payload],\r\n   [actions.deleteTodo]: (state, { payload }) =>state.filter(({ id }) => id !== payload)\r\n})\r\n/*const items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload]\r\n    case types.DELETE:\r\n      return state.filter(({ id }) => id !== payload)\r\n\r\n    default:\r\n      return state\r\n  }\r\n}*/\r\n\r\n\r\nconst filter = createReducer('', { [actions.changeFilter]: (_ , { payload }) => payload\r\n  \r\n})\r\n/*const filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case 'contact/changeFilter':\r\n      return payload\r\n\r\n    default:\r\n      return state\r\n  }\r\n}*/\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport contactReducer from './contacts/contacts-reducer'\r\nimport { persistStore, persistReducer , FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n/*import {  combineReducers } from 'redux';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';*/\r\n\r\nconst persistConfig = {\r\n    key: 'keyStorage',\r\n    storage,\r\n    blacklist: [\"filter\"]\r\n};\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER]\r\n        }\r\n    }), logger\r\n]\r\n\r\n/*const rootReducer = combineReducers({\r\n    contacts: persistReducer(persistConfig, contactReducer ),\r\n    \r\n});\r\n*/\r\n/*const persistedReducer = persistReducer(persistConfig, rootReducer )*/\r\n\r\n/*const initialState = combineReducers({\r\n    \r\n    contacts: contactReducer,\r\n   \r\n})*/\r\n\r\n//const store = createStore(initialState, composeWithDevTools());\r\nconst store = configureStore({\r\n    reducer: {\r\n     contacts:   persistReducer(persistConfig, contactReducer)\r\n    },\r\n    middleware,\r\n});\r\n\r\nconst persistor = persistStore(store)\r\nexport default {store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconsole.log(store)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"contactStyles_item__2ee9o\",\"title\":\"contactStyles_title__2HZwh\",\"contactList\":\"contactStyles_contactList__3Cfeg\",\"buttonContact\":\"contactStyles_buttonContact__38o2a\",\"icon\":\"contactStyles_icon__3FdBi\",\"name\":\"contactStyles_name__2eycf\",\"number\":\"contactStyles_number__2cGdp\"};"],"sourceRoot":""}